<?php define('METHOD',@$_POST['_method']?$_POST['_method']:$_SERVER['REQUEST_METHOD']);class Greebo{static$n;static function rape($a){require "$a.php";$u=@$_SERVER['PATH_INFO']?$_SERVER['PATH_INFO']:'/';foreach(array_diff(get_declared_classes(),self::$n)+ array('E404')as$c){if(preg_match(sprintf('!^%s$!',constant("$c::R")),$u,$m)){if(!method_exists($c,METHOD))continue;$c=new$c;$m[0]=new Req;try{return call_user_func_array(array($c,METHOD),$m)->send();}catch(Exception$e){}}}}}Greebo::$n=get_declared_classes();class Req{function __call($m,$a){$p=$m=='param'?$GLOBALS['_'.METHOD]:@$GLOBALS['_'.strtoupper($m)];return@$p[$a[0]]?$p[$a[0]]:@$a[1];}}class Resp{function send(){header($_SERVER['SERVER_PROTOCOL'].''.(@$this->status?$this->status:200));foreach((array)@$this->header as$n=>$h)header("$n:$h");foreach((array)@$this->cookie as$c)call_user_func_array('setrawcookie',$c);echo$this->content;}}class T{function render(){extract(self::esc((array)$this->v));ob_start();echo$this->template();return ob_get_clean();}function raw($v){return@$this->v[$v];}static function esc($v){switch(1){case is_string($v):return htmlspecialchars($v);case is_object($v):$obj=new TE($v);$obj->v=$v;return$obj;case is_array($v):foreach($v as$k=>$v){$v[$k]=self::esc($v);}}return$v;}function template(){include$this->template;}}class TE{function __call($m,$a){return T::esc(@call_user_func_array(array($this,$m),$a));}}function render_to_response($t){$r=new Resp;$r->content=$t;return$r;}function redirect($u){$r=new Resp;$u=$_SERVER['SCRIPT_NAME'].$u;$r->header[]="Location:$u";return$r;}function forward(){throw new Exception;}class E404{const R='.*';function __construct(){$this->r=new Resp;$r->status=404;}function get(){$this->r->content='ooopss';return$this->r;}function post(){return$this->r;}function put(){return$this->r;}function head(){return$this->r;}}