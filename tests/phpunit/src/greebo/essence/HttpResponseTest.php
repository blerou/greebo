<?php

namespace greebo\essence;

require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__).'/../../../../../src/greebo/essence/HttpResponse.php';

/**
 * Test class for HttpResponse.
 * Generated by PHPUnit on 2010-04-08 at 01:09:14.
 */
class HttpResponseTest extends \PHPUnit_Framework_TestCase
{
    /** @var HttpResponse */
    private $response;

    public function setUp()
    {
        $this->response = new HttpResponse();
    }

    public function testStatusDefault()
    {
        $actual = $this->response->getStatus();
        $expected = 200;
        $this->assertEquals($expected, $actual);
    }

    public function testStatus()
    {
        $this->response->setStatus(404);

        $actual = $this->response->getStatus();
        $expected = 404;
        $this->assertEquals($expected, $actual);
    }

    public function testHeaderDefault()
    {
        $actual = $this->response->getHeaders();
        $expected = array();
        $this->assertEquals($expected, $actual);
    }

    public function testHeader()
    {
        $this->response->setHeader('foo', 'bar');

        $actual = $this->response->getHeaders();
        $expected = array('foo' => 'bar');
        $this->assertEquals($expected, $actual);
    }

    public function testCookieDefault()
    {
        $actual = $this->response->getCookies();
        $expected = array();
        $this->assertEquals($expected, $actual);
    }

    public function testCookie()
    {
        $this->response->setCookie('foo', 'bar', 'baz');

        $actual = $this->response->getCookies();
        $expected = array('foo' => array('foo', 'bar', 'baz'));
        $this->assertEquals($expected, $actual);
    }

    public function testContentDefault()
    {
        $actual = $this->response->getContent();
        $expected = null;
        $this->assertEquals($expected, $actual);
    }

    public function testContent()
    {
        $this->response->setContent('foo bar');

        $actual = $this->response->getContent();
        $expected = 'foo bar';
        $this->assertEquals($expected, $actual);
    }
}
